--00
CREATE DATABASE electronics_store;

-- SECTION 1
CREATE TABLE IF NOT EXISTS brands (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS classifications (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS customers (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	first_name VARCHAR(30) NOT NULL,
	last_name VARCHAR(30) NOT NULL,
	address VARCHAR(150) NOT NULL,
	phone VARCHAR(30) NOT NULL UNIQUE,
	loyalty_card BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS items (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	quantity INT NOT NULL CHECK (quantity >= 0),
	price DECIMAL(12,2) NOT NULL CHECK (price > 0.00),
	description TEXT,
	brand_id INT NOT NULL,
	classification_id INT NOT NULL,

	FOREIGN KEY (brand_id)
	REFERENCES brands(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE,
	
	FOREIGN KEY (classification_id)
	REFERENCES classifications(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE	
);

CREATE TABLE IF NOT EXISTS orders (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	created_at TIMESTAMP NOT NULL DEFAULT NOW(),
	customer_id INT NOT NULL,

	FOREIGN KEY (customer_id)
	REFERENCES customers(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE	
);

CREATE TABLE IF NOT EXISTS reviews (
	customer_id INT NOT NULL,
	item_id INT NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT NOW(),
	rating DECIMAL(3,1) NOT NULL DEFAULT 0.0 CHECK (rating <= 10.0),
	
	PRIMARY KEY (customer_id, item_id),
	
	FOREIGN KEY (customer_id)
	REFERENCES customers(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE,

	FOREIGN KEY (item_id)
	REFERENCES items(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS orders_items (
	order_id INT NOT NULL,
	item_id INT NOT NULL,
	quantity INT NOT NULL CHECK (quantity >= 0),

	PRIMARY KEY (order_id, item_id),
	
	FOREIGN KEY (order_id)
	REFERENCES orders(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE,

	FOREIGN KEY (item_id)
	REFERENCES items(id)
	ON UPDATE CASCADE
	ON DELETE CASCADE
);